name: Michelangelo Workflow

on:
  push:
    branches: [ main, release/** ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'services/michelangelo/**'
      - '.github/workflows/michelangelo.yaml'
  pull_request:
    branches: [ main, release/** ]
    paths:
      - 'services/michelangelo/**'
      - '.github/workflows/michelangelo.yaml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v7
      - name: Cache Poetry Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install dependencies
        run: |
          cd services/michelangelo
          poetry install

      - name: Run Pytest
        run: |
          cd services/michelangelo
          poetry run pytest -rP

  build:
    if: ${{ github.event_name != 'pull_request' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.MICHALANGELO_IMAGE_NAME_IN_DOCKERHUB }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: services/michelangelo
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=inline